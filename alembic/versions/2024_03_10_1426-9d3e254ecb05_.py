"""empty message

Revision ID: 9d3e254ecb05
Revises: 
Create Date: 2024-03-10 14:26:16.710919

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import fastapi_users_db_sqlalchemy


# revision identifiers, used by Alembic.
revision: str = "9d3e254ecb05"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "avatar",
        sa.Column("file_name", sa.String(), nullable=False),
        sa.Column("file_data", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "image",
        sa.Column("file_name", sa.String(), nullable=False),
        sa.Column("file_data", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "music",
        sa.Column("file_name", sa.String(), nullable=False),
        sa.Column("file_data", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "pdf",
        sa.Column("file_name", sa.String(), nullable=False),
        sa.Column("file_data", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "post",
        sa.Column("body", sa.String(), nullable=False),
        sa.Column(
            "crated_at",
            sa.Date(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("is_online", sa.Boolean(), nullable=False),
        sa.Column(
            "id", fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False
        ),
        sa.Column("hashed_password", sa.String(length=1024), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "files",
        sa.Column("music_id", sa.Integer(), nullable=False),
        sa.Column("image_id", sa.Integer(), nullable=False),
        sa.Column("pdf_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["image_id"], ["image.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["music_id"], ["music.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(["pdf_id"], ["pdf.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "profile",
        sa.Column("first_name", sa.String(length=40), nullable=True),
        sa.Column("last_name", sa.String(length=40), nullable=True),
        sa.Column("phone", sa.String(), nullable=True),
        sa.Column("telegram", sa.String(), nullable=True),
        sa.Column("bio", sa.String(), nullable=True),
        sa.Column("followers", sa.UUID(), nullable=False),
        sa.Column("following", sa.UUID(), nullable=False),
        sa.Column("avatar", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["avatar"],
            ["avatar.id"],
        ),
        sa.ForeignKeyConstraint(
            ["followers"], ["user.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["following"], ["user.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("avatar"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_table(
        "comment",
        sa.Column("user", sa.UUID(), nullable=False),
        sa.Column("body", sa.String(), nullable=False),
        sa.Column("likes", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column("fiels", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["fiels"], ["files.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["user"], ["profile.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "publication",
        sa.Column("post", sa.Integer(), nullable=False),
        sa.Column("comment", sa.Integer(), nullable=False),
        sa.Column("publisher", sa.UUID(), nullable=False),
        sa.Column("is_favorites", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["comment"], ["comment.id"], ondelete="SET NULL"
        ),
        sa.ForeignKeyConstraint(["post"], ["post.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["publisher"], ["profile.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("publication")
    op.drop_table("comment")
    op.drop_table("profile")
    op.drop_table("files")
    op.drop_table("user")
    op.drop_table("post")
    op.drop_table("pdf")
    op.drop_table("music")
    op.drop_table("image")
    op.drop_table("avatar")
    # ### end Alembic commands ###
